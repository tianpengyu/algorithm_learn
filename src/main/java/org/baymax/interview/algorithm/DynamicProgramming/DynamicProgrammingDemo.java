package org.baymax.interview.algorithm.DynamicProgramming;

/**
 * 动态规划 相关
 *
 * 设计感比较强 艺术感比较强
 *
 * 可以更广泛问题的一种算法和思想
 *
 * 什么是 动态规划
 *  举例子 ： 斐波那契数列 ， 详情见 FibonacciSequence
 *
 * 定义：
 *  将愿问题拆解成若干子问题，同时【保存子问题的答案】，使得【每个子问题】【只求解一次】，最终获得原问题的答案。
 *
 * 使用这种思路 就叫动态规划的问题。
 *
 * 大多数 动态规划的问题 都是 递归的问题， 只不过大多数情况下，重叠子问题
 *
 *
 *
 *
 *                        解决1：记忆画搜索 - 自顶向下的解决
 *                      /
 * 递归问题 -> 重叠子问题
 *                      \
 *                        解决2：动态规划 - 自底向上解决问题
 *
 * 因为 自顶向下地思考问题 会更容易些，所以在使用时一般：
 * 1。 先自顶向下地思考问题
 * 2。 再自底向上地解决问题
 *
 * 更多可以用动态规划解决的问题：
 * 1. 70
 *
 *
 * @author tianpengyu
 * @version 1.0
 * @date 2020/8/7 14:22
 */
public class DynamicProgrammingDemo {
}
